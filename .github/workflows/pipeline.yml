# name: PR Workflow

# on:
#   pull_request:
#     branches:
#       - '**'

# jobs:
#   call-reusable-workflow:
#     uses: SCAI-Lab/scai-ci-templates/.github/workflows/build_arm64.yml@main
#     with:
#       run_target: "pull_request"

name: Create Debians (ARM64) for all packages

on:
  pull_request:
    branches:
      - '**'

jobs:
  build-arm64:
    runs-on: ubuntu-22.04

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run ARM64 Docker container to build packages
        run: |
          docker run --rm --privileged --platform linux/arm64 \
            -v "${{ github.workspace }}:/workspace" \
            -w /workspace \
            arm64v8/ros:humble-ros-base bash -c "
              set -euo pipefail

              apt update && \
              apt install -y git python3-colcon-common-extensions python3-rosdep \
                             dpkg-dev fakeroot devscripts build-essential \
                             python3-bloom python3-ament-package \
                             curl gnupg lsb-release && \
              source /opt/ros/humble/setup.bash && \
              mkdir -p /etc/ros/rosdep/sources.list.d && \
              if [ -f /workspace/rosdep_override.yaml ]; then \
                echo 'yaml file:///workspace/rosdep_override.yaml' > /etc/ros/rosdep/sources.list.d/50-local.list; \
              fi && \
              rosdep init || true && \
              rosdep update && \
              rosdep install --from-paths . --ignore-src -r -y && \
              mkdir -p /workspace/debs && \
              for pkg in \$(colcon list --paths-only --topological-order); do
                echo 'Generating Debian metadata for' \$pkg && \
                pushd \$pkg > /dev/null && \
                rm -rf debian && \
                bloom-generate rosdebian --ros-distro humble --os-name ubuntu --os-version jammy && \
                popd > /dev/null; \
              done && \
              for pkg in \$(colcon list --paths-only --topological-order); do
                echo 'Building Debian package for' \$pkg && \
                pushd \$pkg > /dev/null && \
                fakeroot debian/rules binary && \
                popd > /dev/null; \
              done && \
              find . -name '*.deb' -exec mv {} /workspace/debs/ \;
            "

      - name: Upload .deb files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ros-debian-packages
          path: debs/*.deb
